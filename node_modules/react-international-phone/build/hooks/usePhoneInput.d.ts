import { CountryIso2 } from '../types';
import { UsePhoneConfig } from './usePhone';
export interface UsePhoneInputConfig extends Omit<UsePhoneConfig, 'country' | 'inputRef' | 'onCountryGuess' | 'onPhoneFormat'> {
    /**
     * @description Initial country value (iso2).
     */
    initialCountry: CountryIso2;
    /**
     * @description phone value
     */
    value?: string;
    /**
     * @description Hide space after country dial code
     * @default false
     */
    hideSpaceAfterDialCode?: boolean;
    /**
     * @description Callback that calls on country change
     * @params *phone* - new phone value
     * @default undefined
     */
    onCountryChange?: (phone: string) => void;
}
export declare const usePhoneInput: ({ initialCountry, value, prefix, countries, disableDialCodeAndPrefix, hideSpaceAfterDialCode, onCountryChange, ...restConfig }: UsePhoneInputConfig) => {
    phone: string;
    handlePhoneValueChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => string;
    inputRef: import("react").MutableRefObject<HTMLInputElement | null>;
    country: CountryIso2;
    setCountry: (countryIso2: CountryIso2) => void;
};
